<?php
session_start();
require_once 'config.php';

header('Content-Type: application/json');

function makeCurlRequest($url, $method, $headers, $data = null) {
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, $method);
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
    if ($data) {
        curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
    }
    $response = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);
    return ['response' => $response, 'httpCode' => $httpCode];
}

// Step 1: Fetch Auth Token
$authUrl = PHONEPE_BASE_URLS[PHONEPE_ENV]['auth'];
$authHeaders = [
    'Content-Type: application/x-www-form-urlencoded',
];
$authData = http_build_query([
    'client_id' => PHONEPE_CLIENT_ID,
    'client_version' => PHONEPE_CLIENT_VERSION,
    'client_secret' => PHONEPE_CLIENT_SECRET,
    'grant_type' => 'client_credentials',
]);

$authResponse = makeCurlRequest($authUrl, 'POST', $authHeaders, $authData);
$authData = json_decode($authResponse['response'], true);

if ($authResponse['httpCode'] != 200 || !isset($authData['access_token'])) {
    echo json_encode(['success' => false, 'message' => 'Failed to fetch auth token: ' . ($authData['message'] ?? 'Unknown error')]);
    exit;
}

$_SESSION['access_token'] = $authData['access_token'];
$_SESSION['expires_at'] = $authData['expires_at'];

// Step 2: Create Payment
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $merchantOrderId = $_POST['merchantOrderId'] ?? '';
    $amount = isset($_POST['amount']) ? (float)$_POST['amount'] * 100 : 0; // Convert INR to paisa
    $redirectUrl = $_POST['redirectUrl'] ?? '';

    if (empty($merchantOrderId) || $amount <= 0 || empty($redirectUrl)) {
        echo json_encode(['success' => false, 'message' => 'Invalid input data']);
        exit;
    }

    $payUrl = PHONEPE_BASE_URLS[PHONEPE_ENV]['pay'];
    $payHeaders = [
        'Content-Type: application/json',
        'Authorization: O-Bearer ' . $_SESSION['access_token'],
    ];
    $payData = [
        'merchantOrderId' => $merchantOrderId,
        'amount' => (int)$amount,
        'expireAfter' => 1200,
        'paymentFlow' => [
            'type' => 'PG_CHECKOUT',
            'message' => 'Payment for order ' . $merchantOrderId,
            'merchantUrls' => [
                'redirectUrl' => $redirectUrl,
            ],
        ],
    ];

    $payResponse = makeCurlRequest($payUrl, 'POST', $payHeaders, json_encode($payData));
    $payData = json_decode($payResponse['response'], true);

    if ($payResponse['httpCode'] != 200 || !isset($payData['redirectUrl'])) {
        echo json_encode(['success' => false, 'message' => 'Failed to create payment: ' . ($payData['message'] ?? 'Unknown error')]);
        exit;
    }

    // Store order details in session
    $_SESSION['merchantOrderId'] = $merchantOrderId;
    $_SESSION['orderId'] = $payData['orderId'];

    echo json_encode(['success' => true, 'redirectUrl' => $payData['redirectUrl']]);
    exit;
}

echo json_encode(['success' => false, 'message' => 'Invalid request method']);
?>